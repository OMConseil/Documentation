{
  "swagger": "2.0",
  "info": {
    "version": "0.0.0",
    "title": "api-impact",
    "description": "Documentation automatically generated by the <b>swagger-autogen</b> module."
  },
  "host": "localhost:3000",
  "basePath": "/v1",
  "tags": [
    {
      "name": "CRUD",
      "description": "Endpoints classic CRUD"
    },
    {
      "name": "Search",
      "description": "Different search strategy to get equipements"
    },
    {
      "name": "Utils",
      "description": "Utils endpoints"
    }
  ],
  "schemes": [
    "http",
    "https"
  ],
  "consumes": [
    "application/json"
  ],
  "produces": [
    "application/json"
  ],
  "paths": {
    "/v1/equipement/CRUD/": {
      "post": {
        "tags": [
          "CRUD"
        ],
        "description": "create an equipement",
        "parameters": [
          {
            "name": "id",
            "type": "string",
            "required": true,
            "in": "query"
          },
          {
            "name": "equipement",
            "in": "body",
            "required": true,
            "description": "equipement",
            "schema": {
              "$ref": "#/definitions/Equipement"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/Equipement"
            }
          },
          "400": {
            "description": "Bad Request"
          }
        }
      }
    },
    "/v1/equipement/CRUD/{id}": {
      "put": {
        "tags": [
          "CRUD"
        ],
        "description": "modify the equipement by the id",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "equipement",
            "in": "body",
            "required": true,
            "description": "equipement",
            "schema": {
              "$ref": "#/definitions/Equipement"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/Equipement"
            }
          },
          "400": {
            "description": "Bad Request"
          }
        }
      },
      "delete": {
        "tags": [
          "CRUD"
        ],
        "description": "delete an equipement by its id",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/Equipement"
            }
          },
          "400": {
            "description": "Bad Request"
          }
        }
      },
      "get": {
        "tags": [
          "CRUD"
        ],
        "description": "Get the equipement by the id",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Equipement with the specified id ",
            "schema": {
              "$ref": "#/definitions/Equipement"
            }
          },
          "400": {
            "description": "Bad Request"
          }
        }
      }
    },
    "/v1/equipement/search/all": {
      "get": {
        "tags": [
          "Search"
        ],
        "description": "Get all equipement in the database",
        "parameters": [],
        "responses": {
          "200": {
            "description": "Array of all the equipements",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/Equipement"
              },
              "xml": {
                "name": "main"
              }
            }
          },
          "400": {
            "description": "Bad Request"
          }
        }
      }
    },
    "/v1/equipement/search/mongo_querry": {
      "get": {
        "tags": [
          "Search"
        ],
        "description": "Access equipements with a mongoDB find querry passed in body",
        "parameters": [
          {
            "name": "obj",
            "in": "body",
            "required": true,
            "description": "Mongo Querry",
            "schema": {
              "type": "object",
              "properties": {}
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Array of the equipements returned by the mongo querry",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/Equipement"
              },
              "xml": {
                "name": "main"
              }
            }
          },
          "400": {
            "description": "Bad Request"
          }
        }
      }
    },
    "/v1/equipement/search/text": {
      "get": {
        "tags": [
          "Search"
        ],
        "description": "Search equipement via a text querry on name and brand",
        "parameters": [
          {
            "name": "n",
            "description": "Number of results wanted",
            "required": false,
            "type": "number",
            "in": "query"
          },
          {
            "name": "searchString",
            "description": "search text querry",
            "required": true,
            "type": "string",
            "in": "query"
          }
        ],
        "responses": {
          "200": {
            "description": "Array of the equipements returned by the text querry",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/Equipement"
              },
              "xml": {
                "name": "main"
              }
            }
          },
          "400": {
            "description": "Bad Request"
          }
        }
      }
    },
    "/v1/equipement/search/querry_param": {
      "get": {
        "tags": [
          "Search"
        ],
        "description": "Access equipements by parameters",
        "parameters": [
          {
            "name": "type",
            "type": "string",
            "in": "query"
          },
          {
            "name": "brand",
            "type": "string",
            "in": "query"
          },
          {
            "name": "segmentation",
            "in": "query",
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Array of the equipements returned by the parameter querry",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/Equipement"
              },
              "xml": {
                "name": "main"
              }
            }
          },
          "400": {
            "description": "Bad Request"
          }
        }
      }
    },
    "/v1/equipement/utils/getAllBrands": {
      "get": {
        "tags": [
          "Utils"
        ],
        "description": "Return all the existing brands",
        "parameters": [],
        "responses": {
          "200": {
            "description": "Array of the brand names",
            "schema": {
              "type": "array",
              "example": [
                "string"
              ],
              "items": {
                "type": "string"
              },
              "xml": {
                "name": "main"
              }
            }
          },
          "400": {
            "description": "Bad Request"
          }
        }
      }
    },
    "/v1/equipement/utils/getAllTypes": {
      "get": {
        "tags": [
          "Utils"
        ],
        "description": "Return all the existing type of equipement",
        "parameters": [],
        "responses": {
          "200": {
            "schema": {
              "type": "array",
              "example": [
                "string"
              ],
              "items": {
                "type": "string"
              },
              "xml": {
                "name": "main"
              }
            },
            "description": "Array of the equipements type"
          }
        }
      }
    },
    "/v1/equipement/utils/getAllSegmentation": {
      "get": {
        "tags": [
          "Utils"
        ],
        "description": "Return all the existing segmentation of equipement",
        "parameters": [],
        "responses": {
          "200": {
            "schema": {
              "type": "array",
              "example": [
                "string"
              ],
              "items": {
                "type": "string"
              },
              "xml": {
                "name": "main"
              }
            },
            "description": "Array of the equipements segmentation"
          }
        }
      }
    }
  },
  "definitions": {
    "Equipement": {
      "type": "object",
      "properties": {
        "name": {
          "type": "string",
          "example": "Dell Vostro"
        },
        "type": {
          "type": "string",
          "example": "Ordinateur"
        },
        "brand": {
          "type": "string",
          "example": "Dell"
        },
        "segementation": {
          "type": "string",
          "example": "Portable"
        },
        "descritpion": {
          "type": "string",
          "example": " ... "
        },
        "date_modify": {
          "type": "string",
          "example": "2012-04-23T00:00:00.000Z"
        },
        "impact_cc": {
          "type": "object",
          "properties": {
            "type": {
              "type": "string",
              "example": "cc"
            },
            "unit": {
              "type": "string",
              "example": "Kg CO2 eq."
            },
            "cradle_to_gate_impact": {
              "type": "number",
              "example": 30
            },
            "gate_to_grave_impact": {
              "type": "number",
              "example": 40
            },
            "transport_impact": {
              "type": "number",
              "example": 45
            },
            "use_impact": {
              "type": "number",
              "example": 32
            },
            "eof_impact": {
              "type": "number",
              "example": 12
            },
            "margin_error": {
              "type": "number",
              "example": 12
            },
            "year_usage": {
              "type": "number",
              "example": 4
            },
            "methodology": {
              "type": "string",
              "example": "test"
            },
            "use_methodology": {
              "type": "string",
              "example": "none"
            },
            "source": {
              "type": "string",
              "example": "dede"
            },
            "impact_factor": {
              "type": "string",
              "example": "55"
            },
            "date_publication": {
              "type": "string",
              "example": "2012-04-23T00:00:00.000Z"
            }
          }
        }
      }
    }
  }
}